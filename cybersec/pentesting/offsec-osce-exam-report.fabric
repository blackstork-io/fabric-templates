document "offsec_osce_exam_report" {

  meta {
    name = "Offensive Security Certified Expert Exam Report"

    authors = ["Sergey Polzunov <sergey@blackstork.io>"]

    description = <<-EOT
      The Offensive Security OSCE exam report contains all efforts that were
      conducted in order to pass the Offensive Security Certified Expert exam.

      References:
        - https://www.offsec.com/ctp/OSCE-Exam-Report.docx
        - https://github.com/noraj/OSCP-Exam-Report-Template-Markdown/blob/master/src/OSCE-exam-report-template_OS_v1.md
    EOT

    url = "https://www.offsec.com/certificates/osce3/"
    version = "1.0"

    license = "MIT License"
    tags = ["pentesting", "offsec", "osce"]

    updated_at = "2024-04-20T10:46:51+0000"
  }

  vars {
    hosts = [
      {
        ip = "192.168.XX.200",
        proof = "the-contents-of-proof-txt",

        vulnerable_command = <<-EOT
          Provide the command that was found to be exploitable.
        EOT

        vulnerability_identification = <<-EOT
          Provide the method and code used to find the vulnerability.
        EOT

        poc_code = <<-EOT
          Provide the final proof of concept code used to gain access to the server.
        EOT

        steps = <<-EOT
          Provide a detailed account of your methodology in creating the exploit.
          The steps taken should be able to be easily followed and reproducible if
          necessary.
        EOT
      },
      {
        ip = "192.168.XX.220",
        proof = "the-contents-of-proof-txt",

        vulnerable_code = <<-EOT
          Provide the vulnerable code that was found to be exploitable.
        EOT

        privilege_escalation =<<-EOT
          Provide the method and code used to find the vulnerability.
        EOT

        poc_code = <<-EOT
          Provide the final proof of concept code used to gain access to the server.
        EOT

        # Provide a screenshot of the id command and the contents of proof.txt.
        screenshots = ["./img-placeholder.png"]

        steps = <<-EOT
          Provide a detailed account of your methodology in creating the exploit.
          The steps taken should be able to be easily followed and reproducible if
          necessary.
        EOT
      },
      {
        ip = "192.168.XX.201",

        # Screenshot requirements are detailed in the control panel.
        screenshots = ["./img-placeholder.png"]

        steps = <<-EOT
          Provide a detailed account of your methodology in creating the exploit.
          The steps taken should be able to be easily followed and reproducible if
          necessary.
        EOT
      },
      {
        ip = "192.168.XX.240",

        poc_code = <<-EOT
          Provide the final proof of concept code used to gain access to the server.
        EOT

        # Screenshot requirements are detailed in the control panel.
        screenshots = ["./img-placeholder.png"]

        steps = <<-EOT
          Provide a detailed account of your methodology in creating the exploit.
          The steps taken should be able to be easily followed and reproducible if
          necessary.
        EOT
      },
    ]
  }

  title = "Offensive Security OSCE Exam Documentation"

  content frontmatter {
    content = {
      title = "Offensive Security OSCE Exam Documentation",
      author = {
        email = "student@youremailaddress.com",
        osid = "XXXXX"
      },
    }
  }

  content toc {
    start_level = 1
  }

  section "intro" {
    title = "Offensive Security OSCE Exam Documentation"

    content text {
      value = <<-EOT
        The Offensive Security OSCE exam documentation contains all efforts that
        were conducted in order to pass the Offensive Security Certified Expert
        exam. This report will be graded from a standpoint of correctness and
        fullness to all aspects of the exam. The purpose of this report is to
        ensure that the student has the technical knowledge required to pass the
        qualifications for the Offensive Security Certified Expert certification.

        The student will be required to fill out this exam documentation fully
        and to include the following sections:

        - Methodology walkthrough and detailed outline of steps taken.
        - Each finding with included screenshots, walkthrough, sample code, and proof.txt if applicable.
        - Any additional items that were not included
      EOT
    }
  }

  section "host_findings_0" {

    vars {
      host = query_jq(".vars.hosts[0]")
    }

    title = "{{ .vars.host.ip }}"

    section "proof" {
      title = "proof.txt"

      content text {
        value = "{{ .vars.host.proof }}"
      }
    }

    section "vulnerable_command" {
      title = "Vulnerable Command"

      content text {
        value = "{{ .vars.host.vulnerable_command }}"
      }
    }

    section "vulnerability_identification" {
      title = "Vulnerability Identification"

      content text {
        value = "{{ .vars.host.vulnerability_identification }}"
      }
    }

    section "poc_code" {
      title = "PoC Code"

      content text {
        value = "{{ .vars.host.poc_code }}"
      }
    }

    section "steps" {
      title = "Steps"

      content text {
        value = "{{ .vars.host.steps }}"
      }
    }
  }

  section "host_findings_1" {

    vars {
      host = query_jq(".vars.hosts[1]")
    }

    title = "{{ .vars.host.ip }}"

    section "proof" {
      title = "proof.txt"

      content text {
        value = "{{ .vars.host.proof }}"
      }
    }

    section "vulnerable_code" {
      title = "Vulnerable Code"

      content text {
        value = "{{ .vars.host.vulnerable_code }}"
      }
    }

    section "privilege_escalation" {
      title = "Privilege Escalation"

      content text {
        value = "{{ .vars.host.privilege_escalation }}"
      }
    }

    section "poc_code" {
      title = "PoC Code"

      content text {
        value = "{{ .vars.host.poc_code }}"
      }
    }

    section "screenshots" {
      title = "Screenshots"

      # FIXME: should be a loop
      content image {
        src = "{{ index .vars.host.screenshots 0 }}"
      }
    }

    section "steps" {
      title = "Steps"

      content text {
        value = "{{ .vars.host.steps }}"
      }
    }
  }

  section "host_findings_2" {

    vars {
      host = query_jq(".vars.hosts[2]")
    }

    title = "{{ .vars.host.ip }}"

    section "screenshots" {
      title = "Screenshots"

      # FIXME: should be a loop
      content image {
        src = "{{ index .vars.host.screenshots 0 }}"
      }
    }

    section "steps" {
      title = "Steps"

      content text {
        value = "{{ .vars.host.steps }}"
      }
    }
  }

  section "host_findings_3" {

    vars {
      host = query_jq(".vars.hosts[3]")
    }

    title = "{{ .vars.host.ip }}"

    section "poc_code" {
      title = "PoC Code"

      content text {
        value = "{{ .vars.host.poc_code }}"
      }
    }

    section "screenshots" {
      title = "Screenshots"

      # FIXME: should be a loop
      # FIXME: should render the source -- https://github.com/blackstork-io/fabric/issues/263
      content image {
        src = "{{ index .vars.host.screenshots 0 }}"
      }
    }

    section "steps" {
      title = "Steps"

      content text {
        value = "{{ .vars.host.steps }}"
      }
    }
  }

  section ref {
    base = section.offsec_exam_additional_info
  }
}
