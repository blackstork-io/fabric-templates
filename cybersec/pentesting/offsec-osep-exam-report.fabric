section "network_summary" {
  title = "Network {{ .vars.network.name }}"

  content table {
    rows = query_jq(".vars.network.hosts")

    columns = [
      {
        header = "IP Address"
        value = "{{ .row.value.ip_address }}"
      },
      {
        header = "Hostname"
        value = "{{ .row.value.hostname }}"
      },
      {
        header = "Compromised"
        value = "{{ if .row.value.is_compromised -}} Yes {{- else -}} No {{- end -}}"
      },
      {
        header = "Low-Privilege User"
        value = "{{ if .row.value.low_priv_user_name -}} {{ .row.value.low_priv_user_name }} {{- else -}} N/A {{- end -}}"
      },
      {
        header = "High-Privilege User"
        value = "{{ if .row.value.high_priv_user_name -}} {{ .row.value.high_priv_user_name }} {{- else -}} N/A {{- end -}}"
      },
    ]
  }

  content text {
    value = <<-EOT
      The chain of attack followed for getting into the machines listed above,
      in the network {{ .vars.network.name }}, was as follows:

      {{ .vars.network.chain_of_attack }}
    EOT
  }
}

document "offsec_osep_exam_report" {

  meta {
    name = "Offensive Security Certified Professional Exam Report"

    authors = ["Sergey Polzunov <sergey@blackstork.io>"]

    description = <<-EOT
      The Offensive Security OSEP exam documentation contains all efforts that
      were conducted in order to pass the Offensive Security Experienced
      Penetration Tester exam. This report will be graded from a standpoint of
      correctness and fullness to all aspects of the exam. The purpose of this
      report is to ensure that the student has the technical knowledge required
      to pass the qualifications for the Offensive Security Experienced
      Penetration Tester certification.

      References:
        - https://www.offsec.com/
        - https://www.offsec.com/courses/pen-300/
        - https://www.offsec.com/osep-online/OSEP-Exam-Report.docx
        - https://github.com/noraj/OSCP-Exam-Report-Template-Markdown/blob/master/src/OSEP-exam-report-template_ceso_v1.md
    EOT

    url = "https://www.offsec.com/courses/pen-300/"
    version = "2.0"

    license = "MIT License"
    tags = ["pentesting", "offsec", "exam", "osep", "pen-300"]

    updated_at = "2024-04-27T13:06:51+0000"
  }

  vars {

    networks = [
      {
        name = "DOMAIN_NETWORK_A"
        hosts = [
          {
            ip_address = "192.168.X.1",
            hostname = "hostname-aaa",
            is_compromised = false,
            low_priv_user_name = null,
            high_priv_user_name = null,
            local_txt = null,
            proof_txt = null,
            secret_txt = null,
            pre_compromise_enumeration = <<-EOT
              Provide relevant techniques and methods used to perform
              enumeration prior to initial compromise, the steps taken should
              be able to be easily followed and reproducible if necessary.
              Include any custom code or references to public tools.
            EOT
            compromise = <<-EOT
              Provide a description of exploitation steps to compromise the
              machine and obtain shell access, the steps taken should be able
              to be easily followed and reproducible if necessary. Only the
              steps that ended up working are required. Include any custom code
              or references to public tools.

              ```bash
              custom-code
              ```
            EOT
            post_compromise_enumeration = <<-EOT
              Provide relevant post-exploitation enumeration steps related to the
              network or local privilege escalation, the steps taken should be
              able to be easily followed and reproducible if necessary. Include
              any custom code or references to public tools.

              ```python
              x = 1
              ```
            EOT
            local_priv_escalation = <<-EOT
              Provide a description of exploitation steps to escalate
              privileges on the machine if applicable, the steps taken should
              be able to be easily followed and reproducible if necessary.
              Include any custom code or references to public tools.
            EOT
            screenshots = [
              "./img-placeholder.png",
              "./img-placeholder.png",
            ]
          },
          {
            ip_address = "192.168.X.2",
            hostname = "hostname-bbb",
            is_compromised = true,
            low_priv_user_name = "john",
            high_priv_user_name = "root",
            local_txt = "local-txt-content",
            proof_txt = "proof-txt-content",
            secret_txt = "secret-txt-content",
            pre_compromise_enumeration = <<-EOT
              Provide relevant techniques and methods used to perform
              enumeration prior to initial compromise, the steps taken should
              be able to be easily followed and reproducible if necessary.
              Include any custom code or references to public tools.
            EOT
          },
          {
            ip_address = "192.168.X.3",
            hostname = "hostname-ccc",
            is_compromised = true,
            low_priv_user_name = null,
            high_priv_user_name = "root",
            local_txt = "local-txt-content",
            proof_txt = "proof-txt-content",
            secret_txt = "secret-txt-content",
            pre_compromise_enumeration = <<-EOT
              Provide relevant techniques and methods used to perform
              enumeration prior to initial compromise, the steps taken should
              be able to be easily followed and reproducible if necessary.
              Include any custom code or references to public tools.
            EOT
          }
        ],
        chain_of_attack = <<-EOT
          1. foo
          2. bar
          3. baz
        EOT
      },
      {
        name = "DOMAIN_NETWORK_B"
        hosts = [
          {
            ip_address = "192.168.X.10",
            hostname = "hostname-ddd",
            is_compromised = true,
            low_priv_user_name = "john",
            high_priv_user_name = "bill",
          },
        ]
        chain_of_attack = <<-EOT
          1. xxx
          2. yyy
          3. zzz
        EOT
      }
    ]
  }

  title = "Offensive Security OSEP Exam Documentation"

  content frontmatter {
    content = {
      title = "Offensive Security OSEP Exam Documentation",
      author = {
        email = "student@youremailaddress.com",
        osid = "XXXXX"
      },
    }
  }

  content toc {
    start_level = 1
    end_level = 4
  }

  section "description" {
    title = "Offensive Security OSEP Exam Documentation"

    content text {
      value = <<-EOT
        The Offensive Security OSEP exam documentation contains all efforts that
        were conducted in order to pass the Offensive Security Experienced
        Penetration Tester exam. This report will be graded from a standpoint of
        correctness and fullness to all aspects of the exam. The purpose of this
        report is to ensure that the student has the technical knowledge required
        to pass the qualifications for the Offensive Security Experienced
        Penetration Tester certification.
      EOT
    }

    section "objective" {
      title = "Objective"

      content text {
        value = <<-EOT
          The objective of this assessment is to perform an external penetration
          test against the Offensive Security Exam network. The student is tasked
          with following methodical approach in obtaining access to the objective
          goals. This test should simulate an actual penetration test and how you
          would start from beginning to end, including enumeration and
          post-exploitation. The exam report is not meant to be a penetration
          test report, but rather a writeup of the steps taken to locate,
          enumerate and compromise the network.

          Enumeration and post-exploitation actions that lead to subsequent attacks with
          successful compromises should be included in the report.

          An example page has already been created for you at the latter portions of this
          document that should give you ample information on what is expected to pass
          this exam. Use the sample report as a guideline to get you through the
          reporting.
        EOT
      }
    }

    section "requirements" {
      title = "Requirements"

      content text {
        value = <<-EOT
          The student will be required to fill out this exam documentation fully and to include the following sections:

          - High level summery of findings, including the depth of compromise.
          - Methodology walkthrough and detailed outline of steps taken including enumeration.
          - Each finding with included screenshots, walkthrough, sample code or reference.
          - Screenshot of any local.txt, proof.txt or secret.txt.
        EOT
      }
    }
  }

  section "summary" {
    title = "High-Level Summary"

    content text {
      value = <<-EOT
        A brief description of the attack chain with machine names, including the depth of compromise should be included here.
      EOT
    }

    section ref "summary_network_1" {
      base = section.network_summary

      vars {
        network = query_jq(".vars.networks[0]")
      }
    }

    section ref "summary_network_2" {
      base = section.network_summary

      vars {
        network = query_jq(".vars.networks[1]")
      }
    }
  }

  section "attack_network_1" {

    vars {
      network = query_jq(".vars.networks[0]")
    }

    title = "Network {{ .vars.network.name }}"

    # FIXME: This should be a loop
    section "host_1" {

      vars {
        host = query_jq(".vars.network.hosts[0]")
      }

      title = "{{ .vars.host.ip_address }} / {{ .vars.host.hostname }}"

      section "proofs" {
        title = "Local.txt / Proof.txt / Secret.txt"

        content text {
          value = <<-EOT
            {{ with .vars.host.local_txt }}
            **local.txt content**: {{ . }}
            {{ end -}}

            {{- with .vars.host.proof_txt }}
            **proof.txt content**: {{ . }}
            {{ end -}}

            {{- with .vars.host.secret_txt }}
            **secret.txt content**: {{ . }}
            {{ end -}}

            {{- if not (or .vars.host.local_txt .vars.host.proof_txt .vars.host.secret_txt) }}
            No proofs were obtained.
            {{ end -}}
          EOT
        }
      }

      section "pre_compromise_enumeration" {
        title = "Pre-Compromise Enumeration Steps"

        content text {
          value = "{{ .vars.host.pre_compromise_enumeration }}"
        }
      }

      section "compromise" {
        title = "Compromise"

        content text {
          value = "{{ .vars.host.compromise }}"
        }
      }

      section "post_compromise_enumeration" {
        title = "Post-Exploitation Enumeration Steps"

        content text {
          value = "{{ .vars.host.post_compromise_enumeration }}"
        }
      }

      section "local_priv_escalation" {
        title = "Local Privilege Escalation"

        content text {
          value = "{{ .vars.host.local_priv_escalation }}"
        }
      }

      section "screenshots" {
        title = "Screenshots"

        content text {
          value = <<-EOT
            The exam control panel contains a section available to submit your
            proof files. The contents of the local.txt, proof.txt and secret.txt
            files obtained from your exam machines must be submitted in the
            control panel before your exam has ended. Note that the control panel
            will not indicate whether the submitted proof is correct or not. 

            Each local.txt, proof.txt and secret.txt found must be shown in a screenshot
            that includes the contents of the file, as well as the IP address of the target
            by using ipconfig, ifconfig or ip addr.
          EOT
        }

        content image {
          local_var = query_jq(".vars.host.screenshots[0]")
          src = "{{ .vars.local }}"
        }
      }
    }

    section "host_2" {

      vars {
        host = query_jq(".vars.network.hosts[1]")
      }

      title = "{{ .vars.host.ip_address }} / {{ .vars.host.hostname }}"

      section "proofs" {
        title = "Local.txt / Proof.txt / Secret.txt"

        content text {
          value = <<-EOT
            {{ with .vars.host.local_txt }}
            **local.txt content**: {{ . }}
            {{ end -}}

            {{- with .vars.host.proof_txt }}
            **proof.txt content**: {{ . }}
            {{ end -}}

            {{- with .vars.host.secret_txt }}
            **secret.txt content**: {{ . }}
            {{ end -}}

            {{- if not (or .vars.host.local_txt .vars.host.proof_txt .vars.host.secret_txt) }}
            No proofs were obtained.
            {{ end -}}
          EOT
        }
      }

      section "enumeration" {
        title = "Pre-Compromise Enumeration Steps"

        content text {
          value = "{{ .vars.host.pre_compromise_enumeration }}"
        }
      }
    }
  }

  section ref {
    base = section.offsec_exam_additional_info
  }
}
